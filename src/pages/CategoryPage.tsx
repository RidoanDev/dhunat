
import { useState } from "react";
import { useParams, useNavigate } from "react-router-dom";
import Header from "@/components/Header";
import BottomNavigation from "@/components/BottomNavigation";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Input } from "@/components/ui/input";
import { Button } from "@/components/ui/button";
import { ArrowLeft, Search, Phone, MapPin, Clock } from "lucide-react";

const CategoryPage = () => {
  const { category } = useParams();
  const navigate = useNavigate();
  const [searchTerm, setSearchTerm] = useState("");

  // Sample data - in a real app this would come from an API
  const getCategoryData = (category: string) => {
    const categories: { [key: string]: any } = {
      'doctor': {
        name: '‡¶°‡¶æ‡¶ï‡ßç‡¶§‡¶æ‡¶∞',
        services: [
          {
            id: 1,
            name: '‡¶°‡¶æ. ‡¶Æ‡ßã‡¶π‡¶æ‡¶Æ‡ßç‡¶Æ‡¶¶ ‡¶∞‡¶π‡¶ø‡¶Æ',
            phone: '‡ß¶‡ßß‡ß≠‡ßß‡ß®-‡ß©‡ß™‡ß´‡ß¨‡ß≠‡ßÆ',
            location: '‡¶ß‡ßÅ‡¶®‡¶ü ‡¶∏‡¶¶‡¶∞ ‡¶π‡¶æ‡¶∏‡¶™‡¶æ‡¶§‡¶æ‡¶≤',
            speciality: '‡¶∏‡¶æ‡¶ß‡¶æ‡¶∞‡¶£ ‡¶ö‡¶ø‡¶ï‡¶ø‡¶§‡ßç‡¶∏‡¶ï',
            time: '‡¶∏‡¶ï‡¶æ‡¶≤ ‡ßØ‡¶ü‡¶æ - ‡¶¶‡ßÅ‡¶™‡ßÅ‡¶∞ ‡ß®‡¶ü‡¶æ'
          },
          {
            id: 2,
            name: '‡¶°‡¶æ. ‡¶´‡¶æ‡¶§‡ßá‡¶Æ‡¶æ ‡¶ñ‡¶æ‡¶§‡ßÅ‡¶®',
            phone: '‡ß¶‡ßß‡ßÆ‡ßß‡ß®-‡ßØ‡ßÆ‡ß≠‡ß¨‡ß´‡ß™',
            location: '‡¶Ü‡¶ß‡ßÅ‡¶®‡¶ø‡¶ï ‡¶Æ‡ßá‡¶°‡¶ø‡¶ï‡ßá‡¶≤ ‡¶∏‡ßá‡¶®‡ßç‡¶ü‡¶æ‡¶∞',
            speciality: '‡¶∂‡¶ø‡¶∂‡ßÅ ‡¶¨‡¶ø‡¶∂‡ßá‡¶∑‡¶ú‡ßç‡¶û',
            time: '‡¶¨‡¶ø‡¶ï‡¶æ‡¶≤ ‡ß™‡¶ü‡¶æ - ‡¶∞‡¶æ‡¶§ ‡ßÆ‡¶ü‡¶æ'
          }
        ]
      },
      'hospital': {
        name: '‡¶π‡¶æ‡¶∏‡¶™‡¶æ‡¶§‡¶æ‡¶≤',
        services: [
          {
            id: 1,
            name: '‡¶ß‡ßÅ‡¶®‡¶ü ‡¶∏‡¶¶‡¶∞ ‡¶π‡¶æ‡¶∏‡¶™‡¶æ‡¶§‡¶æ‡¶≤',
            phone: '‡ß¶‡ßß‡ß≠‡ßß‡ß®-‡ßß‡ßß‡ßß‡ßß‡ßß‡ßß',
            location: '‡¶ß‡ßÅ‡¶®‡¶ü ‡¶∏‡¶¶‡¶∞',
            speciality: '‡¶ú‡¶∞‡ßÅ‡¶∞‡¶ø ‡¶∏‡ßá‡¶¨‡¶æ ‡ß®‡ß™/‡ß≠',
            time: '‡¶∏‡¶¨ ‡¶∏‡¶Æ‡¶Ø‡¶º ‡¶ñ‡ßã‡¶≤‡¶æ'
          }
        ]
      }
    };

    return categories[category] || {
      name: '‡¶∏‡ßá‡¶¨‡¶æ',
      services: []
    };
  };

  const categoryData = getCategoryData(category || '');
  
  const filteredServices = categoryData.services.filter((service: any) =>
    service.name.toLowerCase().includes(searchTerm.toLowerCase()) ||
    service.speciality.toLowerCase().includes(searchTerm.toLowerCase())
  );

  return (
    <div className="min-h-screen bg-background">
      <Header />
      <main className="pb-20">
        {/* Category Header */}
        <div className="bg-primary text-primary-foreground p-4">
          <div className="flex items-center gap-3 mb-2">
            <Button
              variant="ghost"
              size="sm"
              onClick={() => navigate(-1)}
              className="text-primary-foreground hover:bg-primary-foreground/20"
            >
              <ArrowLeft className="h-4 w-4" />
            </Button>
            <h1 className="text-xl font-bold">{categoryData.name}</h1>
          </div>
          
          {/* Search Box */}
          <div className="relative">
            <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-4 w-4" />
            <Input
              placeholder={`${categoryData.name} ‡¶ñ‡ßÅ‡¶Å‡¶ú‡ßÅ‡¶®...`}
              value={searchTerm}
              onChange={(e) => setSearchTerm(e.target.value)}
              className="pl-10 bg-white"
            />
          </div>
        </div>

        {/* Services List */}
        <div className="p-4 space-y-4">
          {filteredServices.length > 0 ? (
            filteredServices.map((service: any) => (
              <Card key={service.id} className="hover:shadow-md transition-shadow">
                <CardHeader className="pb-3">
                  <CardTitle className="text-lg">{service.name}</CardTitle>
                  <p className="text-sm text-primary">{service.speciality}</p>
                </CardHeader>
                <CardContent className="pt-0 space-y-2">
                  <div className="flex items-center gap-2 text-sm">
                    <Phone className="h-4 w-4 text-green-600" />
                    <a href={`tel:${service.phone}`} className="text-green-600 font-medium">
                      {service.phone}
                    </a>
                  </div>
                  <div className="flex items-center gap-2 text-sm text-gray-600">
                    <MapPin className="h-4 w-4" />
                    <span>{service.location}</span>
                  </div>
                  {service.time && (
                    <div className="flex items-center gap-2 text-sm text-gray-600">
                      <Clock className="h-4 w-4" />
                      <span>{service.time}</span>
                    </div>
                  )}
                </CardContent>
              </Card>
            ))
          ) : (
            <Card className="text-center py-12">
              <CardContent>
                <div className="text-6xl mb-4">üîç</div>
                <h3 className="text-lg font-medium mb-2">‡¶ï‡ßã‡¶® ‡¶∏‡ßá‡¶¨‡¶æ ‡¶™‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ ‡¶Ø‡¶æ‡¶Ø‡¶º‡¶®‡¶ø</h3>
                <p className="text-muted-foreground">
                  {searchTerm ? 
                    `"${searchTerm}" ‡¶è‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶ï‡ßã‡¶® ‡¶´‡¶≤‡¶æ‡¶´‡¶≤ ‡¶™‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ ‡¶Ø‡¶æ‡¶Ø‡¶º‡¶®‡¶ø‡•§` :
                    `‡¶è‡¶á ‡¶ï‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶ó‡¶∞‡¶ø‡¶§‡ßá ‡¶è‡¶ñ‡¶®‡ßã ‡¶ï‡ßã‡¶® ‡¶∏‡ßá‡¶¨‡¶æ ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶æ ‡¶π‡¶Ø‡¶º‡¶®‡¶ø‡•§`
                  }
                </p>
              </CardContent>
            </Card>
          )}
        </div>
      </main>
      <BottomNavigation />
    </div>
  );
};

export default CategoryPage;
